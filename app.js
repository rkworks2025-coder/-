// ===== 設定（固定URL） =====
const GAS_URL = "https://script.google.com/macros/s/AKfycbytPvlFPvOmcaNr0u4LgLqG7VWYOa9oFz6HjV00RaNv1zTMRlzLyuv-X1a5qVH7bqVY0w/exec";

// ===== 共通ユーティリティ =====
function fmtDateJST(ts){if(!ts)return"";try{const dt=new Date(ts);const p=new Intl.DateTimeFormat("ja-JP",{timeZone:"Asia/Tokyo",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",hour12:false}).formatToParts(dt);const g=t=>p.find(x=>x.type===t)?.value||"";return g("month")+"/"+g("day")+"\n"+g("hour")+":"+g("minute");}catch(e){return"";}}
function sevenRule(ts){if(!ts)return false;return(Date.now()-ts)>=7*24*60*60*1000;}
function computeCounters(s){const n=s.items.length;let d=0,st=0,sk=0;for(let i=0;i<n;i++){if(s.checked[i])d++;if(s.flags[i]==="stopped")st++;if(s.flags[i]==="skip")sk++;}return{done:d,stopped:st,skip:sk,total:n};}
function getSortedIndices(s){const a=[...Array(s.items.length).keys()];a.sort((x,y)=>(s.checked[x]===s.checked[y])?0:(s.checked[x]?1:-1));return a;}
function loadCityState(c){try{return JSON.parse(localStorage.getItem("junkai_"+c))||{items:[],checked:[],flags:[],dates:[],meta:[]};}catch(_){return{items:[],checked:[],flags:[],dates:[],meta:[]};}}
function saveCityState(c,s){localStorage.setItem("junkai_"+c,JSON.stringify(s));}

// ===== ログ（既存） =====
async function sendLog(p){try{await fetch(GAS_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)});}catch(_){}}

// ===== Index: 同期 / 再計算 =====
async function syncFromGAS(){try{const url=GAS_URL+(GAS_URL.includes("?")?"&":"?")+"action=pull";const res=await fetch(url,{method:"GET"});if(!res.ok){const t=await res.text().catch(()=> "");throw new Error(`HTTP ${res.status} ${res.statusText} ${t?("- "+t):""}`.trim());}const ct=res.headers.get("content-type")||"";let obj;if(ct.includes("application/json"))obj=await res.json();else{const t=await res.text();try{obj=JSON.parse(t);}catch{throw new Error("JSON以外のレスポンス");}}if(!obj||obj.ok!==true||!Array.isArray(obj.data))throw new Error("JSON形式が不正です（{ok:true,data:[...]} を期待）");const buckets={yamato:[],ebina:[],chofu:[]};const MAP={"大和市":"yamato","大和":"yamato","yamato":"yamato","Yamato":"yamato","海老名市":"ebina","海老名":"ebina","ebina":"ebina","Ebina":"ebina","調布市":"chofu","調布":"chofu","chofu":"chofu","Chofu":"chofu"};for(const r of obj.data){const city=r?.city??r?.City??r?.エリア??"";const key=MAP[city]||"";if(!key)continue;const item={station:r?.station??r?.Station??r?.ステーション名??"",model:r?.model??r?.Model??r?.車種??"",plate:r?.plate_full??r?.plate??r?.Plate??r?.フルナンバー??""};buckets[key].push(item);}for(const k of ["yamato","ebina","chofu"]){const items=buckets[k];const s={items,checked:items.map(()=>false),flags:items.map(()=>""),dates:items.map(()=>null),meta:[]};saveCityState(k,s);}updateCounts();alert("同期完了！");return true;}catch(e){alert("同期に失敗しました：\n"+(e?.message||String(e)));return false;}}
function updateCounts(){const cs=["yamato","ebina","chofu"];let ad=0,as=0,ak=0,at=0;for(const c of cs){const s=loadCityState(c);const k=computeCounters(s);ad+=k.done;as+=k.stopped;ak+=k.skip;at+=k.total;const el=document.getElementById(c+"_count");if(el){el.innerHTML=`<span class="b done">済 ${k.done}</span><span class="b stop">停 ${k.stopped}</span><span class="b skip">不 ${k.skip}</span><span class="b total">総 ${k.total}</span>`;}}const all=document.getElementById("all_count");if(all){all.innerHTML=`<span class="b done">済 ${ad}</span><span class="b stop">停 ${as}</span><span class="b skip">不 ${ak}</span><span class="b total">総 ${at}</span>`;}}
